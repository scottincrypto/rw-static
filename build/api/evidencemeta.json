{"queries":[{"id":"current_day","compiledQueryString":"select\n  block_day\n  , pool_balance\n  , reward_balance\n  , token_balance\n  , balance\n  , cumu_invested\n  , cumu_withdrawn\n  , apr\n  , pnl\n  , (balance-token_balance)/balance as funds_allocated\nfrom tokenlogic_data.treasury_returns\norder by block_day desc limit 1","inputQueryString":"select\n  block_day\n  , pool_balance\n  , reward_balance\n  , token_balance\n  , balance\n  , cumu_invested\n  , cumu_withdrawn\n  , apr\n  , pnl\n  , (balance-token_balance)/balance as funds_allocated\nfrom tokenlogic_data.treasury_returns\norder by block_day desc limit 1","compiled":false,"inline":true},{"id":"open_positions","compiledQueryString":"select distinct \n  protocol || ' ' || pool as open_pool\n  , '/open_positions/' || protocol || ' ' || pool as open_pool_link\n  , cumu_invested as invested\n  , balance as total_holdings\n  , pnl as PnL\n  , case \n    when protocol || ' ' || pool = 'Pendle fGHO 2025-07-31' then pnl/cumu_invested/years_invested\n  \telse apr end as APR\nfrom tokenlogic_data.pool_returns\nwhere 1=1\n  and balance > 0\n  and block_day = (select max(block_day) from tokenlogic_data.pool_returns)","inputQueryString":"select distinct \n  protocol || ' ' || pool as open_pool\n  , '/open_positions/' || protocol || ' ' || pool as open_pool_link\n  , cumu_invested as invested\n  , balance as total_holdings\n  , pnl as PnL\n  , case \n    when protocol || ' ' || pool = 'Pendle fGHO 2025-07-31' then pnl/cumu_invested/years_invested\n  \telse apr end as APR\nfrom tokenlogic_data.pool_returns\nwhere 1=1\n  and balance > 0\n  and block_day = (select max(block_day) from tokenlogic_data.pool_returns)","compiled":false,"inline":true},{"id":"treasury_charts","compiledQueryString":"select \n  block_day\n  , balance \n  , pnl\nfrom tokenlogic_data.treasury_returns\norder by block_day","inputQueryString":"select \n  block_day\n  , balance \n  , pnl\nfrom tokenlogic_data.treasury_returns\norder by block_day","compiled":false,"inline":true},{"id":"pool_charts","compiledQueryString":"select \n  block_day\n  , protocol || ' ' || pool as pool \n  , balance\n  , apr \n  , pnl \nfrom tokenlogic_data.pool_returns\nwhere balance > 0\nunion all \nselect \n  block_day\n  , 'Token Holdings' as pool\n  , token_balance as balance\n  , 0 as apr \n  , 0 as pnl\nfrom tokenlogic_data.treasury_returns","inputQueryString":"select \n  block_day\n  , protocol || ' ' || pool as pool \n  , balance\n  , apr \n  , pnl \nfrom tokenlogic_data.pool_returns\nwhere balance > 0\nunion all \nselect \n  block_day\n  , 'Token Holdings' as pool\n  , token_balance as balance\n  , 0 as apr \n  , 0 as pnl\nfrom tokenlogic_data.treasury_returns","compiled":false,"inline":true},{"id":"pool_apr","compiledQueryString":"select \n  block_day\n  , protocol || ' ' || pool as pool \n  , apr \nfrom tokenlogic_data.pool_returns\nwhere balance > 0 and apr > -0.5\nunion all \nselect \n  block_day\n  , 'Treasury' as pool \n  , apr \nfrom tokenlogic_data.treasury_returns\norder by block_day, pool","inputQueryString":"select \n  block_day\n  , protocol || ' ' || pool as pool \n  , apr \nfrom tokenlogic_data.pool_returns\nwhere balance > 0 and apr > -0.5\nunion all \nselect \n  block_day\n  , 'Treasury' as pool \n  , apr \nfrom tokenlogic_data.treasury_returns\norder by block_day, pool","compiled":false,"inline":true},{"id":"token_holdings","compiledQueryString":"select \n  block_day\n  , symbol\n  , balance_usd\nfrom tokenlogic_data.treasury_base\nwhere holding_type = 'Token Holdings'\norder by block_day","inputQueryString":"select \n  block_day\n  , symbol\n  , balance_usd\nfrom tokenlogic_data.treasury_base\nwhere holding_type = 'Token Holdings'\norder by block_day","compiled":false,"inline":true},{"id":"all_holdings","compiledQueryString":"select \n  protocol || ' ' || pool as holding\n  , holding_type\n  , null as symbol\n  , sum(balance_usd) as balance\n  , 1 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and (balance_usd > 1 or balance_usd < -1)\n and holding_type = 'Pool Deposit'\ngroup by protocol, pool, holding_type, sort_order\nunion all \nselect \n  protocol || ' ' || pool as holding\n  , 'Unclaimed Rewards' as holding_type\n  , symbol\n  , sum(balance_usd) as balance\n  , 2 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and balance_usd > 1\n and holding_type = 'Rewards'\n group by protocol, pool, holding_type, symbol, sort_order\n union all \nselect \n  'Token' as holding\n  , 'Token Holdings' as holding_type\n  , symbol\n  , sum(balance_usd) as balance\n  , 3 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and balance_usd > 1\n and holding_type = 'Token Holdings'\n group by holding, symbol, holding_type, sort_order\norder by sort_order, balance desc","inputQueryString":"select \n  protocol || ' ' || pool as holding\n  , holding_type\n  , null as symbol\n  , sum(balance_usd) as balance\n  , 1 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and (balance_usd > 1 or balance_usd < -1)\n and holding_type = 'Pool Deposit'\ngroup by protocol, pool, holding_type, sort_order\nunion all \nselect \n  protocol || ' ' || pool as holding\n  , 'Unclaimed Rewards' as holding_type\n  , symbol\n  , sum(balance_usd) as balance\n  , 2 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and balance_usd > 1\n and holding_type = 'Rewards'\n group by protocol, pool, holding_type, symbol, sort_order\n union all \nselect \n  'Token' as holding\n  , 'Token Holdings' as holding_type\n  , symbol\n  , sum(balance_usd) as balance\n  , 3 as sort_order\nfrom tokenlogic_data.treasury_base\nwhere 1=1\n and block_day = (select max(block_day) from tokenlogic_data.treasury_base)\n and balance_usd > 1\n and holding_type = 'Token Holdings'\n group by holding, symbol, holding_type, sort_order\norder by sort_order, balance desc","compiled":false,"inline":true},{"id":"closed_positions","compiledQueryString":"select distinct \n  protocol || ' ' || pool as closed_pool\n  , '/closed_positions/' || protocol || ' ' || pool as closed_pool_link\n  , cumu_invested as invested\n  , cumu_withdrawn as withdrawn\n  , pnl as PnL\n    , case \n    when protocol || ' ' || pool = 'Maverick Boosted Position 4' then pnl/cumu_invested/years_invested\n    when protocol || ' ' || pool = 'Gearbox USDC V2 Pool' then pnl/cumu_invested/years_invested\n    when protocol || ' ' || pool = 'Pendle fGHO 2025-07-31' then pnl/cumu_invested/years_invested\n  \telse apr end as APR\n  , block_day as closed_date\nfrom tokenlogic_data.pool_returns\nwhere 1=1\n  and balance = 0","inputQueryString":"select distinct \n  protocol || ' ' || pool as closed_pool\n  , '/closed_positions/' || protocol || ' ' || pool as closed_pool_link\n  , cumu_invested as invested\n  , cumu_withdrawn as withdrawn\n  , pnl as PnL\n    , case \n    when protocol || ' ' || pool = 'Maverick Boosted Position 4' then pnl/cumu_invested/years_invested\n    when protocol || ' ' || pool = 'Gearbox USDC V2 Pool' then pnl/cumu_invested/years_invested\n    when protocol || ' ' || pool = 'Pendle fGHO 2025-07-31' then pnl/cumu_invested/years_invested\n  \telse apr end as APR\n  , block_day as closed_date\nfrom tokenlogic_data.pool_returns\nwhere 1=1\n  and balance = 0","compiled":false,"inline":true}]}